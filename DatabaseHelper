// DatabaseHelper.kt

class DatabaseHelper(var context: Context) : SQLiteOpenHelper(
    context, DATABASE_NAME, null,
    DATABASE_VERSION
){
    companion object {
        val TAG = "db"

        val TABLE_NAME = "myTable"
        val COL_ID = "id"
        val COL_DATA = "text"
        val DATABASE_NAME = "my_database"
        val DATABASE_VERSION = 1
    }

    override fun onCreate(p0: SQLiteDatabase?) {
        val createTable = "CREATE TABLE $TABLE_NAME ($COL_ID INTEGER PRIMARY KEY AUTOINCREMENT, $COL_DATA TEXT)"
        p0?.execSQL(createTable)
    }

    fun insertData(data: String): Int{
        val database = this.writableDatabase
        val contentValues = ContentValues()
        contentValues.put(COL_DATA, data)
        val result = database.insert(TABLE_NAME, null, contentValues).toInt()

        return result
    }

    fun retrieveData(): ArrayList<String>{
        val database = this.writableDatabase
        val query = "SELECT * FROM " + TABLE_NAME

        val data = database.rawQuery(query, null)

        var result = ArrayList<String>()

        while (data.moveToNext()) {
            result.add(data.getString(DATABASE_VERSION))
        }

        return result
    }

    override fun onUpgrade(p0: SQLiteDatabase?, p1: Int, p2: Int) {
        p0?.execSQL("DROP IF TABLE EXISTS " + TABLE_NAME)

        onCreate(p0)
    }
}
