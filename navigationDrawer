// Creating navigation drawer in Kotlin Android

1) You should have the following library
      implementation 'com.google.android.material:material:1.2.0'

2) Make navigation drawer menu
<menu xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tool="http://schemas.android.com/tools"
    tool:showIn="navigation_view">

    <group android:checkableBehavior="single">

        <item android:id="@+id/all"
            android:title="@string/all" />
    </group>
</menu>

3) Create new style inside resources/styles(AppTheme.NoActionBar) and apply inside MANIFEST

<style name="AppTheme.NoActionBar">
        
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>
4) If you want the navigation drawer has header, then do the following in order

5) Create nav_header.xml inside your layout

6) Create toolbar.xml
  <androidx.appcompat.widget.Toolbar 
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="?attr/actionBarSize"
    android:background="@color/colorPrimary"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
    app:popupTheme="@style/Theme.AppCompat.Light"
    android:elevation="4dp"
    android:id="@+id/toolbar"
    />

7) Include it inside main_activity.xml
      <?xml version="1.0" encoding="utf-8"?>
<androidx.drawerlayout.widget.DrawerLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:fitsSystemWindows="true"
    tools:openDrawer="start"
    android:id="@+id/drawer_layout"
    >

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <include
            android:id="@+id/toolbar"
            layout="@layout/toolbar"
            />

        <Button
            android:id="@+id/textView"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Text"
            app:layout_constraintTop_toBottomOf="@id/toolbar"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintBottom_toBottomOf="parent"
            />

    </androidx.constraintlayout.widget.ConstraintLayout>
    
    <com.google.android.material.navigation.NavigationView
        android:id="@+id/nav_view"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        app:menu="@menu/nav_menu"
        />
</androidx.drawerlayout.widget.DrawerLayout>

7) Inside strings.xml
      <string name="navigation_drawer_open">Open navigation drawer</string>
      <string name="navigation_drawer_close">Close navigation drawer</string>
      
8) Finally, inside MainActivity.kt

    private lateinit var toolbar: Toolbar
    private lateinit var drawerLayout: DrawerLayout
    
    private fun initNavigationDrawer() {
        toolbar = findViewById(R.id.toolbar)
        setSupportActionBar(toolbar)

        drawer = findViewById(R.id.drawer_layout)

        val toggle = ActionBarDrawerToggle(this, drawer, toolbar,
        R.string.navigation_drawer_open, R.string.navigation_drawer_close)
        drawer.addDrawerListener(toggle)
        toggle.syncState()
    }

    override fun onBackPressed() {
        if (drawerLayout.isDrawerOpen(GravityCompat.START)) {
            drawerLayout.closeDrawer(GravityCompat.START)
        } else {
            super.onBackPressed()
        }
    }
